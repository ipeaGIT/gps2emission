% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ef_europe.R
\name{ef_europe}
\alias{ef_europe}
\title{Emission factor dependent on speed by EMEP/EEA}
\usage{
ef_europe(
  speed,
  veh_type,
  euro,
  pollutant,
  fuel = "Diesel",
  tech = "SCR",
  slope = 0,
  load = 0.5,
  k = 1,
  fcorr = 1,
  show.equation = TRUE
)
}
\arguments{
\item{speed}{units; Speed in [km/h].}

\item{veh_type}{character; Bus type, classified in "Urban Buses Midi <=15 t",
"Urban Buses Standard 15 - 18 t", "Urban Buses Articulated >18 t", "Coaches Standard <=18 t",
"Coaches Articulated >18 t", "Urban CNG Buses", and "Urban Biodiesel Buses".}

\item{euro}{character; Euro period of vehicle, classified in "Conventional", "I", "II",
"Euro III", "IV", "V", "VI", and "EEV".}

\item{pollutant}{character; Pollutant, classified in "CO", "NOx", "VOC", "PM", "FC" (Fuel
Consumption), "CH4", "NH3" and "N2O".}

\item{fuel}{character; Fuel type, classified in "Diesel", "CNG", and "Biodiesel". Default is "Diesel".}

\item{tech}{character; Technology, classified in "SCR", "EGR", and "DPF+SCR". Default is "SCR".}

\item{slope}{numeric; Slope gradient, classified in -0.06, -0.04, -0.02, 0.00, 0.02, 0.04 and 0.06.
Negative gradients means downhills and positive uphills. Default is 0.0.}

\item{load}{numeric; Load ratio, classified in 0.0, 0.5 and 1.0. Default is 0.5.}

\item{k}{numeric; constant value to adjust emission factors. Default is 1.0.}

\item{fcorr}{numeric; Correction based on fuel composition. The length must be one per
each euro standards. Default is 1.0.}

\item{show.equation}{logical; show.equation from EMEP/EEEA used? Default parameter is TRUE.}
}
\value{
emission factors in units 'g/km' (a vector or a data.frame).
}
\description{
Returns a vector or data.frame of emission factors for buses based on EMEP/EEA.
Function based on values from [EMEP/EEA air pollutant emission inventory guidebook 2019](https://www.eea.europa.eu/themes/air/air-pollution-sources-1/emep-eea-air-pollutant-emission-inventory-guidebook).
Estimates expressed in units 'g/km'.
}
